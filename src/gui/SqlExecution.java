/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import log.Log;
import logic.connection.mysql.MySqlConnection;

/**
 *
 * @author Zoran Zivanovic <zoran86zz at yahoo.com>
 */
public class SqlExecution extends javax.swing.JPanel
{

    /**
     * Creates new form SqlExecution
     */
    public SqlExecution()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtp_sql_query = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jt_result = new javax.swing.JTable();
        jb_cleare = new javax.swing.JButton();
        jb_execute = new javax.swing.JButton();
        jl_message = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jtp_sql_query);

        jt_result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {},
                {},
                {},
                {}
            },
            new String []
            {

            }
        ));
        jScrollPane2.setViewportView(jt_result);

        jb_cleare.setText("cleare");
        jb_cleare.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jb_cleareActionPerformed(evt);
            }
        });

        jb_execute.setText("execute");
        jb_execute.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jb_executeActionPerformed(evt);
            }
        });

        jl_message.setForeground(new java.awt.Color(255, 0, 0));

        jLabel1.setText("SQL upit:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jl_message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(280, 280, 280)
                        .addComponent(jb_execute)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_cleare))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jl_message)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jb_cleare)
                        .addComponent(jb_execute)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jb_cleareActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jb_cleareActionPerformed
    {//GEN-HEADEREND:event_jb_cleareActionPerformed
        jtp_sql_query.setText("");
        jt_result.clearSelection();
        jt_result.setModel(new DefaultTableModel());
    }//GEN-LAST:event_jb_cleareActionPerformed

    private void jb_executeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jb_executeActionPerformed
    {//GEN-HEADEREND:event_jb_executeActionPerformed
        try
        {
            Statement st;
            Connection connection = mysql_connection.getConnection();
            st = connection.createStatement();
            if (jtp_sql_query.getText().toLowerCase().startsWith("select"))
            {
                Vector data_vector = new Vector();
                Vector column_name = new Vector();


                ResultSet result = st.executeQuery(jtp_sql_query.getText());
                if (result != null)
                {
                    ResultSetMetaData metaDt = result.getMetaData();

                    for (int i = 1; i <= metaDt.getColumnCount(); i++)
                    {
                        column_name.add(metaDt.getColumnName(i));
                    }
                    while (result.next())
                    {
                        Vector row = new Vector();
                        for (int i = 1; i <= metaDt.getColumnCount(); i++)
                        {
                            row.add(result.getObject(i));
                        }
                        data_vector.add(row);
                    }
                    DefaultTableModel dtm = new DefaultTableModel(data_vector, column_name)
                    {
                        @Override
                        public boolean isCellEditable(int row, int column)
                        {
                            return false;
                        }

                        public Color getRowColour(int row)
                        {
                            return row % 2 == 1 ? Color.LIGHT_GRAY : Color.WHITE;
                        }
                    };

                    jt_result.setModel(dtm);

                    jt_result.revalidate();
                    result.close();
                    jl_message.setText("");
                }
                else
                {
                    jl_message.setText("Problem u izvrsavanju upita!");
                }

            } else
            {
                st.executeUpdate(jtp_sql_query.getText());
                jt_result.setModel(new DefaultTableModel());
                jl_message.setText("");
            }
            st.close();
        } catch (SQLException ex)
        {
            Log.loge(ex.getMessage());
            jl_message.setText(ex.getMessage());
        }
    }//GEN-LAST:event_jb_executeActionPerformed
    public void setConnection(MySqlConnection mysql_connection)
    {
        this.mysql_connection = mysql_connection;
    }
    
    public void set_query_and_exec(String q)
    {
        jb_cleare.doClick();
        jtp_sql_query.setText(q);
        jb_execute.doClick();
    }
    private MySqlConnection mysql_connection;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jb_cleare;
    private javax.swing.JButton jb_execute;
    private javax.swing.JLabel jl_message;
    private javax.swing.JTable jt_result;
    private javax.swing.JTextPane jtp_sql_query;
    // End of variables declaration//GEN-END:variables
}
